# Generated by Django 3.0.3 on 2020-02-07 05:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cust_Loc',
            fields=[
                ('cust_loc_id', models.IntegerField(primary_key=True, serialize=False)),
                ('contract_date', models.DateField()),
                ('renew_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Cust_Status_Type',
            fields=[
                ('cust_stat_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('cust_stat_type_name', models.CharField(max_length=100, verbose_name='Customer Status Type Name')),
                ('cust_stat_type_desc', models.CharField(max_length=100, verbose_name='Customer Status Type description')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('cust_id', models.IntegerField(primary_key=True, serialize=False)),
                ('cust_f_name', models.CharField(max_length=50, verbose_name='Customer First Name')),
                ('cust_l_name', models.CharField(max_length=50, verbose_name='Customer Last Name')),
                ('cust_street', models.CharField(max_length=50, verbose_name='Customer Street')),
                ('cust_city', models.CharField(max_length=50, verbose_name='Customer City')),
                ('cust_state', models.CharField(max_length=50, verbose_name='Customer State')),
                ('cust_zip', models.CharField(max_length=10, verbose_name='Customer Zip Code')),
            ],
        ),
        migrations.CreateModel(
            name='Event_Status',
            fields=[
                ('event_status_id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_status_name', models.CharField(max_length=100, verbose_name='Event Status Name')),
                ('event_status_desc', models.CharField(max_length=200, verbose_name='Event Status Description')),
            ],
        ),
        migrations.CreateModel(
            name='Event_Type',
            fields=[
                ('event_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_type_name', models.CharField(max_length=100, verbose_name='Event Type Name')),
                ('event_type_desc', models.CharField(max_length=200, verbose_name='Event Type Description')),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance_Type',
            fields=[
                ('main_type_id', models.IntegerField(primary_key=True, serialize=False)),
                ('main_type_name', models.CharField(max_length=100, verbose_name='Maintenance Type Name')),
                ('main_type_desc', models.CharField(max_length=100, verbose_name='Maintenance Type Description=')),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('station_id', models.IntegerField(primary_key=True, serialize=False)),
                ('station_name', models.CharField(max_length=100, verbose_name='Station Name')),
                ('station_county', models.CharField(max_length=50, verbose_name='Station County')),
                ('station_zip', models.CharField(max_length=10, verbose_name='Station Zip')),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('main_id', models.IntegerField(primary_key=True, serialize=False)),
                ('main_start_date', models.DateField()),
                ('main_end_date', models.DateField()),
                ('main_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Maintenance_Type')),
            ],
        ),
        migrations.CreateModel(
            name='Locker',
            fields=[
                ('locker_id', models.IntegerField(primary_key=True, serialize=False)),
                ('locker_name', models.CharField(max_length=100, verbose_name='Locker Name')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Station')),
            ],
        ),
        migrations.CreateModel(
            name='Loc_Maintenance',
            fields=[
                ('loc_main_id', models.IntegerField(primary_key=True, serialize=False)),
                ('locker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Locker')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=100, verbose_name='Event name')),
                ('event_start_date', models.DateField()),
                ('event_end_date', models.DateField()),
                ('event_status_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Event_Status')),
                ('event_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Event_Type')),
            ],
        ),
        migrations.CreateModel(
            name='Cust_Status',
            fields=[
                ('cust_status_id', models.IntegerField(primary_key=True, serialize=False)),
                ('cust_status_date', models.DateField()),
                ('cust_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Customer')),
                ('cust_status_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Cust_Status_Type')),
                ('station_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Station')),
            ],
        ),
        migrations.CreateModel(
            name='Cust_Loc_Event',
            fields=[
                ('cust_loc_event_id', models.IntegerField(primary_key=True, serialize=False)),
                ('cust_loc_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Cust_Loc')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Event')),
            ],
        ),
        migrations.AddField(
            model_name='cust_loc',
            name='cust_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Customer'),
        ),
        migrations.AddField(
            model_name='cust_loc',
            name='locker_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Locker'),
        ),
    ]
