# Generated by Django 3.0.3 on 2020-04-23 20:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cust_Locker',
            fields=[
                ('cust_lock_id', models.AutoField(primary_key=True, serialize=False)),
                ('contract_date', models.DateField()),
                ('renew_date', models.DateField()),
            ],
            options={
                'verbose_name': 'Customer Locker',
                'verbose_name_plural': 'Customer Lockers',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('cust_id', models.AutoField(primary_key=True, serialize=False)),
                ('cust_f_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('cust_l_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('cust_email', models.EmailField(default='', max_length=100, verbose_name='Email')),
                ('cust_phone', models.CharField(default='', max_length=50, verbose_name='Phone #1')),
                ('cust_phone2', models.CharField(blank=True, default='', max_length=50, verbose_name='Phone #2')),
                ('cust_address', models.CharField(default='', max_length=50, verbose_name='Street Address')),
                ('cust_city', models.CharField(max_length=50, verbose_name='City')),
                ('cust_state', models.CharField(max_length=50, verbose_name='State')),
                ('cust_zip', models.CharField(max_length=10, verbose_name='Zip Code')),
            ],
            options={
                'ordering': ['cust_l_name'],
            },
        ),
        migrations.CreateModel(
            name='Key_Status',
            fields=[
                ('key_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('key_status_name', models.CharField(max_length=100, verbose_name='Key Status Name')),
            ],
            options={
                'verbose_name': 'Key Status',
                'verbose_name_plural': 'Key Statuses',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(max_length=100, verbose_name='Location Name')),
                ('location_zip', models.CharField(max_length=10, verbose_name='Location Zip')),
            ],
        ),
        migrations.CreateModel(
            name='Locker',
            fields=[
                ('locker_id', models.AutoField(primary_key=True, serialize=False)),
                ('locker_name', models.CharField(max_length=100, verbose_name='Locker Name')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Location')),
            ],
        ),
        migrations.CreateModel(
            name='Locker_Status',
            fields=[
                ('locker_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('locker_status_name', models.CharField(max_length=100, verbose_name='Locker Status Name')),
            ],
            options={
                'verbose_name': 'Locker Status',
                'verbose_name_plural': 'Locker Statuses',
            },
        ),
        migrations.CreateModel(
            name='Maintenance_Status',
            fields=[
                ('main_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('main_status_name', models.CharField(max_length=100, verbose_name='Maintenance Status Name')),
            ],
            options={
                'verbose_name': 'Maintenance Status',
                'verbose_name_plural': 'Maintenance Statuses',
            },
        ),
        migrations.CreateModel(
            name='Maintenance_Type',
            fields=[
                ('main_type_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Maintenance Type')),
                ('main_type_name', models.CharField(max_length=100, verbose_name='Maintenance Type Name')),
                ('main_type_desc', models.CharField(max_length=100, verbose_name='Maintenance Type Description')),
            ],
            options={
                'verbose_name': 'Maintenance Type',
                'verbose_name_plural': 'Maintenance Types',
            },
        ),
        migrations.CreateModel(
            name='Renewal_Response',
            fields=[
                ('response_id', models.AutoField(primary_key=True, serialize=False)),
                ('response_description', models.CharField(max_length=100, verbose_name='Response Description')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=100, verbose_name='Status Name')),
                ('status_desc', models.CharField(max_length=100, verbose_name='Status Description')),
            ],
        ),
        migrations.CreateModel(
            name='Waitlist',
            fields=[
                ('waitlist_id', models.AutoField(primary_key=True, serialize=False)),
                ('waitlist_date', models.DateField()),
                ('cust_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Customer')),
                ('locations', models.ManyToManyField(to='database.Location')),
            ],
            options={
                'verbose_name': 'Waitlist',
                'verbose_name_plural': 'Waitlists',
            },
        ),
        migrations.CreateModel(
            name='Renewal',
            fields=[
                ('renewal_id', models.AutoField(primary_key=True, serialize=False)),
                ('sent_date', models.DateField()),
                ('sent_date_2', models.DateField()),
                ('phone_call', models.BooleanField()),
                ('cust_locker_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Cust_Locker')),
                ('response_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='response1', to='database.Renewal_Response')),
                ('response_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='response2', to='database.Renewal_Response')),
                ('response_3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='response3', to='database.Renewal_Response')),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('maintenance_id', models.AutoField(primary_key=True, serialize=False)),
                ('maintenance_scope', models.CharField(choices=[('General Facility', 'General Facility'), ('Specific Locker(s)', 'Specific Locker(s)')], max_length=50, verbose_name='Maintenance Scope')),
                ('maintenance_description', models.CharField(default='', max_length=250, verbose_name='Maintenance Description')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Location')),
                ('lockers', models.ManyToManyField(blank=True, to='database.Locker')),
                ('main_status_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='database.Maintenance_Status')),
                ('main_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Maintenance_Type')),
            ],
        ),
        migrations.AddField(
            model_name='locker',
            name='locker_status_id',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='database.Locker_Status'),
        ),
        migrations.CreateModel(
            name='Key',
            fields=[
                ('key_id', models.AutoField(primary_key=True, serialize=False)),
                ('key_name', models.CharField(max_length=100, verbose_name='Key Name')),
                ('key_status_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='database.Key_Status')),
                ('locker_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Locker')),
            ],
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('inquiry_id', models.AutoField(primary_key=True, serialize=False)),
                ('inquiry_date', models.DateField()),
                ('cust_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Customer')),
                ('locations', models.ManyToManyField(to='database.Location')),
            ],
            options={
                'verbose_name': 'Inquiry',
                'verbose_name_plural': 'Inquiries',
            },
        ),
        migrations.CreateModel(
            name='Cust_Status',
            fields=[
                ('cust_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('cust_status_date', models.DateField()),
                ('cust_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Customer')),
                ('status_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Status')),
            ],
            options={
                'verbose_name': 'Customer Status',
                'verbose_name_plural': 'Customer Statuses',
            },
        ),
        migrations.AddField(
            model_name='cust_locker',
            name='cust_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Customer'),
        ),
        migrations.AddField(
            model_name='cust_locker',
            name='locker_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Locker'),
        ),
    ]
